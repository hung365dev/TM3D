// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using Utils;
using System.Collections;


namespace Items
{

	public class InventoryItemFullDisplay : MonoBehaviour
	{
		public UILabel title;
		public UILabel description;
		public UILabel softCost;
		public UILabel hardCost;
		public UILabel itemCount;
		public UIButton btnSell;
		public UIButton btnUse;
		public UITexture textureImage;
		private AssignItemToMonster _assignScreen;
		private InventoryItem _item;
		
		public bool listening = false;
		public delegate void OnItemUsed(ITMItem aItem);
		public event OnItemUsed onItemUsed;
	
		
		public InventoryItemFullDisplay ()
		{
		}
		
		public void initItem(InventoryItem aItem,AssignItemToMonster aAssignScreen) {
			title.text = aItem.item.Name();
			_item = aItem;
			if(!listening) {
				PlayerMain.REF.onInventoryChanged += onInventoryChanged;
				listening = true;
			}
			description.text = aItem.item.Description();
			softCost.text = aItem.item.SoftCost().ToString();
			hardCost.text = aItem.item.HardCost().ToString();
			itemCount.text = aItem.count.ToString();
			_assignScreen = aAssignScreen;
			if(InventoryDisplay.inventoryType==EInventoryType.BaitView) {
				if(btnSell!=null) 
					btnSell.gameObject.SetActive(false);
			}
			textureImage.mainTexture = aItem.item.texture();
		}
		
		private void onInventoryChanged(InventoryItem aItem) {
			if(aItem==_item) {
				initItem(aItem,_assignScreen);
			}
		}
		public void onUseItem() {
		//	try {
			if(InventoryDisplay.targetMonster!=null) {
				Debug.Log ("Inventory display target monster is not null");
				if(InventoryDisplay.inventoryType==EInventoryType.BaitView) {
					Debug.Log ("Inventory type is bait view");
					if(InventoryDisplay.targetMonster.ownershipStatus==EOwnershipStatus.Wild) {
						
						MonsterDataMain m = InventoryDisplay.targetMonster;
					//	Debug.Log ("Monster Data Main is "+m);
						if(m.useBaitOnMonster(this._item.item,true)==EItemUsageType.Consumed) {
					//		Debug.Log ("Used Bait On Monster was consumed");
							if(onItemUsed!=null) {
					//			Debug.Log ("Sending message down");
								onItemUsed( this._item.item);
							}
						}
						
					}
				} else if(InventoryDisplay.inventoryType==EInventoryType.Battleview) {
					MonsterDataMain m = InventoryDisplay.targetMonster;
					
					if(m.consumeItem(this._item.item,false)==EItemUsageType.CouldUse) {
						if(onItemUsed!=null) {
							onItemUsed(this._item.item);
						}
					} else {
						AlertGUI.REF.DoGeneralAlert("Cannot Use Item",m.name+" cannot currently consume "+this._item.item.Name());
					}
				} else {
					MonsterDataMain m = InventoryDisplay.targetMonster;
					
					EItemUsageType used = m.consumeItem(this._item.item,true);
					
					if(used==EItemUsageType.UseFailed) {
						AlertWindowMain.NewAlertWindow("Failed to use "+_item.item.Name(),"The item "+_item.item.Name()+" could not be used on "+m.name);
					} else {
						if(used==EItemUsageType.Equipped) {
							AlertWindowMain.NewAlertWindow(""+_item.item.Name()+" Equipped","The item "+_item.item.Name()+" is now equipped to "+m.name);
						} else 
						if(used==EItemUsageType.Consumed) {
							AlertWindowMain.NewAlertWindow(""+_item.item.Name()+" Consumed",""+_item.item.Name()+" was eaten by: "+m.name);
						}
						if(onItemUsed!=null) {
							onItemUsed(this._item.item);
						}
					}
					
						
					
				}
			} else {
				if(this._item.item.Type()==EItemType.PlayerBoost) {
					if(PlayerMain.REF.consumeItem(this._item.item)) {
						AlertGUI.REF.DoGeneralAlert("Consumed: "+_item.item.Name (),_item.item.Name()+" is now in effect!");
					}
				} else {
					_assignScreen.initFromList(PlayerMain.REF.battleMonsters,_item);
				}
			}
		//	} catch(Exception e) {
		//		Debug.Log ("Error in using Item: "+e.ToString());
		//		Debug.Log ("Error Stack Trace:" +e.StackTrace);
		//	}
		}
		public void onSellItem() {
		
		}
	}
}

