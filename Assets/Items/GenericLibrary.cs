// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
namespace Items
{
	public class GenericLibrary : ITMItemLibrary
	{
		protected BetterList<ITMItem> _items = new BetterList<ITMItem>();
		protected string _name;
		public GenericLibrary ()
		{
		}
		
		public string Name() {
			return _name;
		}
		public BetterList<ITMItem> allItems() {
			return _items;
		}
		public void addItemsTo(BetterList<ITMItem> aItems) {
			for(int i= 0;i<_items.size;i++) {
				aItems.Add(_items[i]);
			}
		}
		public ITMItem itemByID(int aID) {
			for(int i = 0;i<this._items.size;i++) {
				if(_items[i].ID()==aID) {
					return _items[i];
				}
			}
			return null;
		}
		
		public ITMItem itemByName(string aName) {
			for(int i = 0;i<this._items.size;i++) {
				if(_items[i].Name()==aName) {
					return _items[i];
				}
			}
			return null;
		}
		public BetterList<ITMItem> nonPremiumItems() {
			BetterList<ITMItem> r = new BetterList<ITMItem>();
			for(int i = 0;i<_items.size;i++) {
				if(_items[i].HardCost()==0&&_items[i].SoftCost()>0) {
					r.Add(_items[i]);
				}
			}
			return r;
		}
		public BetterList<ITMItem> paidItems() {
			BetterList<ITMItem> r = new BetterList<ITMItem>();
			for(int i = 0;i<_items.size;i++) {
				if(_items[i].HardCost()>0) {
					r.Add(_items[i]);
				}
			}
			return r;
		}
		
		public ITMItem randomItem() {
			int rand = Random.Range(0,_items.size);
			return _items[rand];
		}
		
		
	}
	
	
}

