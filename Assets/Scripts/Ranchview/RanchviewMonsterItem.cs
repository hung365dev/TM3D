// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using ManageMonster;
using Items;


namespace Ranchview
{
	public class RanchviewMonsterItem : MonoBehaviour
	{
		public UILabel monsterName;
		public UILabel monsterLevel;
		public UIProgressBar progress;
		public MonsterDataMain monster;
		public GameObject unusedPoints;
		public UILabel unusedPointsLabel;
		public int index = 0;
		private InventoryItem _item;
		public RanchviewMonsterItem ()
		{
		}
		public void onClick() {
			if(_item!=null) {
				Debug.Log ("Using Item: "+_item.item.Name()+" On Monster: "+monster);
				EItemUsageType used = monster.consumeItem(_item.item,true);
				if(used==EItemUsageType.UseFailed) {
					AlertWindowMain.NewAlertWindow("Failed to use "+_item.item.Name(),"The item "+_item.item.Name()+" could not be used on "+this.monster.name);
				} else {
					if(used==EItemUsageType.Equipped) {
						AlertWindowMain.NewAlertWindow(""+_item.item.Name()+" Equipped","The item "+_item.item.Name()+" is now equipped to "+this.monster.name);
					} else 
					if(used==EItemUsageType.Consumed) {
						AlertWindowMain.NewAlertWindow(""+_item.item.Name()+" Consumed",""+_item.item.Name()+" was eaten by: "+this.monster.name);
					}
					PlayerMain.REF.removeFromInventory(_item.item);
					this.initUnusedMovePointsLevel();
				}
				return;
			}
			Debug.Log ("Clicked"); 
			ManageMonsterScreen.changeMoveMonster = monster;
			Application.LoadLevel("ManageMonster");
		}
		public void init(MonsterDataMain aMonster,int aIndex) {
			index = aIndex;
			monster = aMonster;
			
			UIButton b = this.GetComponent<UIButton>();
			UISprite s = this.GetComponent<UISprite>();
			if(monster!=null) {
				monster.LevelChanged += onMonsterChanged;
				initMonster();
				initUnusedMovePointsLevel();
				b.defaultColor = aMonster.elementType.color;
				UITexture t = this.GetComponentInChildren<UITexture>();
				t.enabled = true;
				t.mainTexture = (Texture) Resources.Load("FlatMonsters/"+this.monster.monsterBreedRef.Name.ToLower().Replace(" ",""));
				
				s.color = aMonster.elementType.color;
				
			} else {
				progress.gameObject.SetActive(false);
				b.defaultColor = new Color(0.11f,0.11f,0.11f);
				s.color = new Color(0.11f,0.11f,0.11f);
				this.monsterName.text = "Empty";
				this.monsterLevel.text = "";
				this.initUnusedMovePointsLevel();
				UITexture t = this.GetComponentInChildren<UITexture>();
				t.enabled = false;
			}
			
			
		}
		
		private void initMonster() {
			
			monsterName.text = monster.name;
			monsterLevel.text = monster.level.ToString();
			progress.value = monster.HpAsPercentage;
		}
		private void onMonsterChanged(MonsterDataMain aMonster) {
			initMonster();
			PlayerMain.REF.saveMonsters();
		}
		private void initUnusedMovePointsLevel() {
			
			if((monster!=null)&&(monster.movePointsAvailable>0)) {
				unusedPoints.SetActive(true);
				unusedPointsLabel.gameObject.SetActive(true);
				unusedPointsLabel.text = monster.movePointsAvailable.ToString();
			} else {
				unusedPoints.SetActive(false);
				unusedPointsLabel.gameObject.SetActive(false);
			}
		}
		
		public void Update() {
			if(monster!=null) {
				this.monsterName.text = monster.name;
				
				progress.value = monster.HpAsPercentage;
			} else {
				if(this.monsterName!=null)
					this.monsterName.text = "Empty";
			}
		}
		public void init(MonsterDataMain aMonster,InventoryItem aItem) {
			
			monster = aMonster;
			
			monster.LevelChanged += onMonsterChanged;
			_item = aItem;
			monsterName.text = aMonster.name;
			monsterLevel.text = aMonster.level.ToString();
			initUnusedMovePointsLevel();
			UIButton b = this.GetComponent<UIButton>();
			b.defaultColor = aMonster.elementType.color;
			
			UISprite s = this.GetComponent<UISprite>();
			s.color = aMonster.elementType.color;
			
			if(monster!=null) {
				monster.LevelChanged += onMonsterChanged;
				initMonster();
				initUnusedMovePointsLevel();
				b.defaultColor = aMonster.elementType.color;
				UITexture t = transform.Find("Sprite").GetComponent<UITexture>();
				t.enabled = true;
				t.mainTexture = (Texture) Resources.Load("FlatMonsters/"+this.monster.monsterBreedRef.Name.ToLower().Replace(" ",""));
				
				s.color = aMonster.elementType.color;
				
			} else {
				progress.gameObject.SetActive(false);
				b.defaultColor = new Color(0.11f,0.11f,0.11f);
				s.color = new Color(0.11f,0.11f,0.11f);
				this.monsterName.text = "Empty";
				this.monsterLevel.text = "";
				this.initUnusedMovePointsLevel();
				UITexture t = this.GetComponentInChildren<UITexture>();
				t.enabled = false;
			}
			
		}
		public void Destroy() {
			
			monster.LevelChanged -= onMonsterChanged;
		}
		public void Start() {
		}
	}
}

