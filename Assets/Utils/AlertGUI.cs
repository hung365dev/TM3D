// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using MTX;
using Items;
using Battles;
using AssemblyCSharp;


namespace Utils
{
	public class AlertGUI : MonoBehaviour
	{
		public GameObject generalAlertPrefab;
		public GameObject questionAlertPrefab;
		public GameObject buyMorePrefab;
		public GameObject buyFullRanchhealPrefab;
		public GameObject buyMoreTerraDollars;
		public GameObject buyMoreTerraCoins;
		public GameObject unlockFullGamePrefab;
		public GameObject inventoryPanel;
		public GameObject worldStorePrefab;
		public GameObject terrapediaPrefab;
		public GameObject moveTreePrefab;
		public GameObject manageMonsterPrefab;
		public GameObject settingsScreenPrefab;
		public GameObject actualMultiplayerScreen;
		public GameObject linkToCloud;
		public GameObject multiplayerScreen;
		
		public static bool SHOW_MULTIPLAYER_BETA_MESSAGE = true;
		public static AlertGUI REF;
		public AlertGUI ()
		{
			
		}

		public void switchOnMultiplayer() {
			multiplayerScreen = actualMultiplayerScreen;
		}
		public void Start() {
			DontDestroyOnLoad(this);
			REF = null;
			REF = this;
		
		}
		public MultiplayerLobby launchMultiplayerLobby() {
			GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
			if(GameObject.Find("MultiplayerLobby")==null) {
				if(multiplayerScreen!=null) {
					GameObject a = NGUITools.AddChild(g,multiplayerScreen);
					MultiplayerLobby wind = a.GetComponentInChildren<MultiplayerLobby>();
					a.gameObject.name = "MultiplayerLobby";
					return wind;
				}
			}
			return null;
		}
		public LinkToCloudAccount launchLinkToCloud() {
			GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
			if(GameObject.Find("LinkToCloud")==null) {
				if(linkToCloud!=null) {
					GameObject a = NGUITools.AddChild(g,linkToCloud);
					LinkToCloudAccount wind = a.GetComponent<LinkToCloudAccount>();
					wind.gameObject.name = "LinkToCloud";
					return wind;
				}
			}
			return null;
		}
		public SettingsScreen ShowSettingsScreen() {
			GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
			if(GameObject.Find("SettingsScreen")==null) {
				if(settingsScreenPrefab!=null) {
					GameObject a = NGUITools.AddChild(g,settingsScreenPrefab);
					SettingsScreen wind = a.GetComponent<SettingsScreen>();
					wind.gameObject.name = "SettingsScreen";
					return wind;
				}
			}
			return null;	
		}
		
		public ManageMonsterRightInit ShowManageMonsterScreen(BattleMonster aMonster) {
			GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
			if(GameObject.Find("ManageMonster")==null) {
				if(manageMonsterPrefab!=null) {
					GameObject a = NGUITools.AddChild(g,manageMonsterPrefab);
					ManageMonsterRightInit wind = a.GetComponent<ManageMonsterRightInit>();
					wind.gameObject.name = "ManageMonster";
					wind.init(aMonster.monster,aMonster);
					return wind;
				}
			}
			return null;	
		}
		public MoveTreeMain LaunchMonsterMoveTree(BattleMonster aMonster) {
			GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
			if(GameObject.Find("MoveTree")==null) {
				if(moveTreePrefab!=null) {
					GameObject a = NGUITools.AddChild(g,moveTreePrefab);
					MoveTreeMain wind = a.GetComponent<MoveTreeMain>();
					wind.gameObject.name = "MoveTree";
					wind.initMonster(aMonster,0);
					return wind;
				}
			}
			return null;
		}
		public AlertQuestionWindow DoQuestionAlert(string aTitle,string aMessage,string aOption1,string aOption2) {
			GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
			if(questionAlertPrefab!=null) {
				GameObject a = NGUITools.AddChild(g,questionAlertPrefab);
				AlertQuestionWindow wind = a.GetComponent<AlertQuestionWindow>();
				wind.init(aTitle,aMessage,aOption1,aOption2);
				return wind;
			}
			return null;
			
		}
		public TerrapediaMain OpenTerrapedia() {
			if(GameObject.Find("Terrapedia")) {
				return GameObject.Find ("Terrapedia").GetComponent<TerrapediaMain>();
			}
			GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
			if(terrapediaPrefab==null) {
				Debug.Log ("Please Set terrapediaPrefab val in AlertGUIWindows");
			}
			if(terrapediaPrefab!=null) {
				GameObject a = NGUITools.AddChild(g,terrapediaPrefab);
				TerrapediaMain[] wind = a.GetComponentsInChildren<TerrapediaMain>();
				return wind[0];
			}
			return null;
			
			
		}
		public UnlockFullGame LaunchUnlockFullGame() {
		
			if(GameObject.Find("UnlockFullGame")==null) {
				GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
				if(unlockFullGamePrefab!=null) {
					GameObject a = NGUITools.AddChild(g,unlockFullGamePrefab);
					UnlockFullGame wind = a.GetComponent<UnlockFullGame>();
					return wind;
				}
			}
			return null;
		}
		public BuyMoreTerraCoins BuyMoreTerraCoins(){
			if(GameObject.Find("BuyMoreTerraCoins")==null) {
				GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
				if(buyMoreTerraCoins!=null) {
					GameObject a = NGUITools.AddChild(g,buyMoreTerraCoins);
					BuyMoreTerraCoins wind = a.GetComponent<BuyMoreTerraCoins>();
					return wind;
				}
			}
			return null;
			
		}
		public BuyMoreTerraDollars BuyMoreTerraDollars(string aTitle,string aMessage) {
			if(GameObject.Find("BuyMoreTerraDollars")==null) {
				GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
				if(buyMoreTerraDollars==null) {
					buyMoreTerraDollars = (GameObject) Resources.Load("Gui/TerraDollarPurchaser");
				}
				if(buyMoreTerraDollars!=null) {
					GameObject a = NGUITools.AddChild(g,buyMoreTerraDollars);
					BuyMoreTerraDollars wind = a.GetComponent<BuyMoreTerraDollars>();
					return wind;
				}
			}
			return null;
			
		}

		public AlertWindowMain DoGeneralAlert(string aTitle,string aMessage) {
			GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
			if(generalAlertPrefab==null) {
				generalAlertPrefab = (GameObject) Resources.Load("Gui/PopupAlertWindow");
			}
			if(generalAlertPrefab!=null) {
				GameObject a = NGUITools.AddChild(g,generalAlertPrefab);
				AlertWindowMain wind = a.GetComponent<AlertWindowMain>();
				wind.init(aTitle,aMessage);
				return wind;
			}
			return null;
			
		}
		
		public WorldStoreMain LaunchStore() {
			
			GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
			if(worldStorePrefab==null) {
				worldStorePrefab = (GameObject) Resources.Load("Gui/WorldStore");
			}
			if(worldStorePrefab!=null) {
				GameObject a = NGUITools.AddChild(g,worldStorePrefab);
				WorldStoreMain wind = a.GetComponent<WorldStoreMain>();
				return wind;
			}
			return null;
			
		}
		public InventoryDisplay LaunchInventory(MonsterDataMain aMonster) {
			GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
			if(inventoryPanel==null) {
				inventoryPanel = (GameObject) Resources.Load("Gui/InventoryPanel");
			}
			if(inventoryPanel!=null) {
				GameObject a = NGUITools.AddChild(g,inventoryPanel);
				InventoryDisplay wind = a.GetComponent<InventoryDisplay>();
				InventoryDisplay.setInventoryTarget(aMonster);
				wind.Toggle();
				return wind;
			}
			return null;
		}
		
		public InventoryDisplay LaunchInventory(EInventoryType aInventoryType) {
			GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
			if(inventoryPanel==null) {
				inventoryPanel = (GameObject) Resources.Load("Gui/InventoryPanel");
			}
			if(inventoryPanel!=null) {
				GameObject a = NGUITools.AddChild(g,inventoryPanel);
				InventoryDisplay wind = a.GetComponent<InventoryDisplay>();
				InventoryDisplay.setInventoryTarget(aInventoryType);
				wind.Toggle();
				return wind;
			}
			return null;
		}
		public AlertWindowBuyFullRanchHeal DoFullRanchHeal(string aMessage) {
			GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
			if(buyFullRanchhealPrefab==null) {
				buyFullRanchhealPrefab = (GameObject) Resources.Load("Gui/PopupFullHealButton");
			}
			if(buyFullRanchhealPrefab!=null) {
				GameObject a = NGUITools.AddChild(g,buyFullRanchhealPrefab);
				AlertWindowBuyFullRanchHeal wind = a.GetComponent<AlertWindowBuyFullRanchHeal>();
				wind.init(aMessage);
				return wind;
			}
			return null;
			
		}
		/*
		public AlertWindowMain DoGeneralAlert(string aTitle,string aMessage) {
			GameObject g = GameObject.FindGameObjectWithTag("UIRoot");
			Debug.Log (generalAlertPrefab+" is generalAlertPrefab");
			if(generalAlertPrefab==null) {
				generalAlertPrefab = (GameObject) Resources.Load("Gui/PopupAlertWindow");
			}
			if(generalAlertPrefab!=null) {
			GameObject a = NGUITools.AddChild(g,generalAlertPrefab);
			AlertWindowMain wind = a.GetComponent<AlertWindowMain>();
			wind.init(aTitle,aMessage);
			return wind;
			}
			return null;
			
		}*/
		
	}
}

