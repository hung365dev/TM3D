// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using Google2u;
using System.Collections.Generic;
using UnityEngine;


public class MonsterLibrary : MonoBehaviour
{
	private BetterList<MonsterLibraryRecord> list = new BetterList<MonsterLibraryRecord>();
	public static MonsterLibrary REF;
		public void Awake ()
		{
			if(REF==null) {
				REF = this;
				DontDestroyOnLoad(this);
			} else {
				Destroy(this);
			}
		}
	
	
	public BetterList<MonsterLibraryRecord> allMonsters {
		get {
			return this.list;
		}
	}
	
	public void initLib() {
		List<TMMonstersRow> monsters = TMMonsters.Instance.Rows;
		for (int i = 0; i < monsters.Count; i++) {
			if(monsters[i]._currentlyworking==1) {
				list.Add(new MonsterLibraryRecord(monsters[i]));
			}
		}
		for(int i = 0;i<list.size;i++) {
			list[i].initEvolvesTo();
		}
	}
	
	public BetterList<MonsterLibraryRecord> getMonstersOfElement(ElementalType aElementalType) {
		BetterList<MonsterLibraryRecord> rec = new BetterList<MonsterLibraryRecord>();
		for(int i = 0; i < list.size ; i++) {
			if((list[i].PrimaryElement==aElementalType)||(list[i].SecondaryElement==aElementalType)) {
				if(list[i].Name!="No Creature")
					rec.Add(list[i]);
			
			}
		}
		return rec;
	}
	
	public MonsterLibraryRecord getMonster(string aName) {
		for(int i = 0; i < list.size ; i++) {
			if(list[i].Name==aName) {
				return list[i];
			}
		}
		return null;
	}
	public MonsterLibraryRecord getMonster(int aID) {
		for(int i = 0; i < list.size ; i++) {
			if(list[i].ID==aID) {
				return list[i];
			}
		}
		return null;
	}
	public int monsterCount {
		get {
			return list.size;
		}
	}
	public byte getMonsterEvolutionLevel(int aID) {
		byte r = 0;
		MonsterLibraryRecord m = getMonster(aID);
		while(m != null) {
			r++;
			m = getEvolvesFrom(m);
		}
		return r;
	}

	public MonsterLibraryRecord getEvolvesFrom(MonsterLibraryRecord aEvolvedForm) {
		for(int i = 0 ; i < list.size ; i++) {
			if(list [i].evolvesTo == aEvolvedForm && list[i] != aEvolvedForm ) {
				return list[i];
			}
		}
		return null;
	}

}

