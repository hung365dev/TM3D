// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using Items;
 

namespace Battles
{
	public class BattleBase : MonoBehaviour
	{
		public GameObject commentaryEngine;
		protected CommentaryManager _commentaryManager;
		protected InventoryDisplay _inventory;
		protected MoveQueueItem _currentItem;
		
		public UILabel debugText;
		
		public Camera UICamera;
		public Camera GlobalCamera;
		public GameObject blackScreen;
		public BattleOverScreen battleOverScreen;
	
		private GameObject _background; 
		public MultiplayerCountdownTimer countdownTimer;
		public static int DEBUG_COUNT = 0;
		public static int MULTIPLAYER_DEBUG_COUNT = 0;
		protected bool _battleComplete = false;
		
		protected BetterList<MoveQueueItem> _moveQueue;
		
		public static int COST_TO_CONTINUE = 10;
		public GameObject continueBattleScreen;
		
		public BattleBase ()
		{

		}
		

		public bool moveQueueActive {
			get {
				if(_moveQueue!=null) {
					if(_moveQueue.size>0) {
						if(_currentItem!=null) {
							return true;
						}
					}
				}
				return false;
			}
		}
		
		public void addDebug(string aText) {
			if(debugText!=null) {
				debugText.text += "\n "+aText;
			}
			DebugText(aText);
		}
		public static void DebugText(string aText,Color aColor) {
			GameObject debugWindow = GameObject.FindGameObjectWithTag("BattleDebugger");
			if(debugWindow!=null) {
				UITextList list = debugWindow.GetComponent<UITextList>();
				MULTIPLAYER_DEBUG_COUNT++;
		//		list.Add("[" + NGUIText.EncodeColor(aColor) + "]"+MULTIPLAYER_DEBUG_COUNT+": "+aText);
			}
		}
		public static void DebugText(string aText) {
			GameObject debugWindow = GameObject.FindGameObjectWithTag("BattleDebugger");
			if(debugWindow!=null) {
				UITextList list = debugWindow.GetComponent<UITextList>();
				
				DEBUG_COUNT++;
			//	list.Add(DEBUG_COUNT+"(Turn: "+BattleControllerWithMoveQueue.MOVE_TURN+"): "+aText);
			}
		}
		public static void QueueText(string aText) {
			GameObject debugWindow = GameObject.FindGameObjectWithTag("BattleDebugger");
			if(debugWindow!=null) {
				UITextList list = debugWindow.GetComponent<UITextList>();
				
				DEBUG_COUNT++;
				list.Add(DEBUG_COUNT+"(Turn: "+BattleControllerWithMoveQueue.MOVE_TURN+"): "+aText);
			}
		}
		public static void MultiplayerDebugText(string aText) {
			GameObject debugWindow = GameObject.FindGameObjectWithTag("MultiplayerBattleDebugger");
			if(debugWindow!=null) {
				UITextList list = debugWindow.GetComponent<UITextList>();
				MULTIPLAYER_DEBUG_COUNT++;
				list.Add(MULTIPLAYER_DEBUG_COUNT+" (Turn: "+BattleControllerWithMoveQueue.MOVE_TURN+"): "+aText);
			}
		}
		
		protected void baseCreate() {
			
				if(commentaryEngine!=null) {
					_commentaryManager = commentaryEngine.GetComponent<CommentaryManager>();
					}
				if(BattleInit.REF!=null) // We might be a multiplayer game
				_background = BattleBGLibrary.getBattleBG(BattleInit.REF.battleBackground);
				
				blackScreen.GetComponent<Renderer>().sortingLayerName = "MiddleLayer";
				blackScreen.transform.localScale = new Vector3(Screen.width*2,Screen.height*2,1);
			}
			

		
			
		}
}

