// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using Google2u;
using UnityEngine;


namespace Items
{
	public class ItemRecoveryItem : ItemGeneric
	{
		private BetterList<RecoveryTriplet> _recoveryTypes = new BetterList<RecoveryTriplet>();
		public ItemRecoveryItem (ItemsRecoveryRow aRecoveryRow)
		{
			_name = aRecoveryRow._itemname;
			_id = aRecoveryRow._id;
			_description = aRecoveryRow._itemdescription;
			_tintColour = new Color(aRecoveryRow._spritetintr/255,aRecoveryRow._spritetintg/255,aRecoveryRow._spritetintb/255,aRecoveryRow._spritetinta/255);
			_spritePrefab = aRecoveryRow._sprite;
			this._hardCost = aRecoveryRow._hardcurrency;
			this._softCost = aRecoveryRow._softcurrency;
			_itemType = EItemType.Recovery;
			_recoveryTypes.Add(new RecoveryTriplet(aRecoveryRow._torecovera,aRecoveryRow._recoveratype,aRecoveryRow._recoveravalue));
			if(aRecoveryRow._torecoverb!=null) 
				_recoveryTypes.Add(new RecoveryTriplet(aRecoveryRow._torecoverb,aRecoveryRow._recoverbtype,aRecoveryRow._recoverbvalue));
			
		}
		/*
		
			switch(aRecoverArea) {
				case("HP"):recoveryArea = EItemRecoveryArea.HP;break;
				case("Energy"):recoveryArea = EItemRecoveryArea.Energy;break;
				case("Heal All Status"):recoveryArea = EItemRecoveryArea.HealAllStatus;break;
				case("Heal Burn"):recoveryArea = EItemRecoveryArea.Burn;break;
				case("Heal Freeze"):recoveryArea = EItemRecoveryArea.Freeze;break;
				case("Heal Confusion"):recoveryArea = EItemRecoveryArea.Confusion;break;
				case("Heal Paralyzed"):recoveryArea = EItemRecoveryArea.Paralyzed;break;
				case("Heal Poisoned"):recoveryArea = EItemRecoveryArea.Poison;break;
			}
			
			switch(aRecoverType) {
				
				case("HealValue"):recoveryType = EItemRecoveryType.HealValue;break;
				case("HealPercentage"):recoveryType = EItemRecoveryType.HealValue;break;
				case("DamagePercentage"):recoveryType = EItemRecoveryType.DamagePercentage;break;
				case("DamageValue"):recoveryType = EItemRecoveryType.DamageValue;break;
			}
			*/
		public RecoveryTriplet healsHP {
			get {
				for(int i = 0;i < _recoveryTypes.size;i++) {
					if(_recoveryTypes[i].recoveryArea==EItemRecoveryArea.HP) {
						return _recoveryTypes[i];
					}
				}
				return null;
			}
		}
		public RecoveryTriplet restoresEnergy {
			get {
				for(int i = 0;i < _recoveryTypes.size;i++) {
					if(_recoveryTypes[i].recoveryArea==EItemRecoveryArea.Energy) {
						return _recoveryTypes[i];
					}
				}
				return null;
			}
		}
		public RecoveryTriplet healsBurn {
			get {
				for(int i = 0;i < _recoveryTypes.size;i++) {
					if((_recoveryTypes[i].recoveryArea==EItemRecoveryArea.Burn)||(_recoveryTypes[i].recoveryArea==EItemRecoveryArea.HealAllStatus)) {
						return _recoveryTypes[i];
					}
				}
				return null;
			}
		}
		public RecoveryTriplet healsConfusion {
			get {
				for(int i = 0;i < _recoveryTypes.size;i++) {
					if((_recoveryTypes[i].recoveryArea==EItemRecoveryArea.Confusion)||(_recoveryTypes[i].recoveryArea==EItemRecoveryArea.HealAllStatus)) {
						return _recoveryTypes[i];
					}
				}
				return null;
			}
		}
		public RecoveryTriplet healsFreeze {
			get {
				for(int i = 0;i < _recoveryTypes.size;i++) {
					if((_recoveryTypes[i].recoveryArea==EItemRecoveryArea.Freeze)||(_recoveryTypes[i].recoveryArea==EItemRecoveryArea.HealAllStatus)) {
						return _recoveryTypes[i];
					}
				}
				return null;
			}
		}
		public RecoveryTriplet healsParalysis {
			get {
				for(int i = 0;i < _recoveryTypes.size;i++) {
					if((_recoveryTypes[i].recoveryArea==EItemRecoveryArea.Paralyzed)||(_recoveryTypes[i].recoveryArea==EItemRecoveryArea.HealAllStatus)) {
						return _recoveryTypes[i];
					}
				}
				return null;
			}
		}
		public RecoveryTriplet healsPoison {
			get {
				for(int i = 0;i < _recoveryTypes.size;i++) {
					if((_recoveryTypes[i].recoveryArea==EItemRecoveryArea.Poison)||(_recoveryTypes[i].recoveryArea==EItemRecoveryArea.HealAllStatus)) {
						return _recoveryTypes[i];
					}
				}
				return null;
			}
		}
		
	}
}

