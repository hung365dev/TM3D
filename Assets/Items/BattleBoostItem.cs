// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using Google2u;
using UnityEngine;
using Battles;


namespace Items
{
	public class BattleBoostItem : ItemGeneric
	{
		public float multiplierVal = 1f;
		public int weaknessBinaryVal = 0;
		public int statChangeBinaryVal = 0;
		public float accuracyMulti = 1f;
		public float agilityMulti = 1f;
		public float rangeAtckMulti =1f;
		public float rangeDefMulti = 1f;
		public float meleeAtckMulti = 1f;
		public float meleeDefMulti =1f;
		public float speedMulti = 1f;
		public float criticalHitMulti = 1f;
		public BattleBoostItem (ItemsBattleBoostsRow aRow)
		{
			_name = aRow._ItemName;
			_description = aRow._ItemDescription;
			_tintColour = new Color(aRow._SpriteTintR/255,aRow._SpriteTintG/255,aRow._SpriteTintB/255,aRow._SpriteTintA/255);
			_spritePrefab = aRow._Sprite;
			this._softCost = aRow._SoftCurrency;
			this._hardCost = aRow._HardCurrency;
			switch(aRow._BoostType) {
				/*BoostAccuracy,BoostAgility,BoostRangeAtck,BoostRangeDef,BoostMeleeAtck,BoostMeleeDef,BoostSpeed,BoostAll
				RemoveWeaknessTo,InvulnerableToStatChange,CriticalHitMultiplier
				*/
				case("BoostAccuracy"):accuracyMulti = aRow._BoostPercent;break;
				case("BoostAgility"):agilityMulti = aRow._BoostPercent;break;
				case("BoostRangeAtck"):rangeAtckMulti = aRow._BoostPercent;break;
				case("BoostRangeDef"):rangeDefMulti = aRow._BoostPercent;break;
				case("BoostMeleeAtck"):meleeAtckMulti = aRow._BoostPercent;break;
				case("BoostMeleeDef"):meleeDefMulti = aRow._BoostPercent;break;
				case("BoostSpeed"):speedMulti = aRow._BoostPercent;break;
				case("BoostAll"):accuracyMulti = aRow._BoostPercent;
					agilityMulti = aRow._BoostPercent;
					rangeAtckMulti = aRow._BoostPercent;
					rangeDefMulti = aRow._BoostPercent;
					meleeAtckMulti = aRow._BoostPercent;
					meleeDefMulti = aRow._BoostPercent;
					speedMulti = aRow._BoostPercent;
				break;
				case("RemoveWeaknessTo"):weaknessBinaryVal = Convert.ToInt32(aRow._BoostPercent);break;
				case("InvulnerableToStatChange"):weaknessBinaryVal = Convert.ToInt32(aRow._BoostPercent);break;
				case("CriticalHitMultiplier"):weaknessBinaryVal = Convert.ToInt32(aRow._BoostPercent);break;
				
			}
			this._id = aRow._ID;
			_itemType = EItemType.BattleBoost;
		}
		
		public int removesWeaknessesTo {
			get {
				return weaknessBinaryVal;
			}
		}
		public float accuracyMultiplier {
			get {
				return multiplierVal;
			}
		}
		public float agilityMultiplier {
			get {
				return multiplierVal;
			}
		}
		public float rangeAtck {
			get {
				return multiplierVal;
			}
		}
		
		public float rangeDef {
			get {
				return multiplierVal;
			}
		}
		public float meleeAtck {
			get {
				return multiplierVal;
			}
		}
		
		public float meleeDef {
			get {
				return multiplierVal;
			}
		}
		
		public float speed {
			get {
				return multiplierVal;
			}
		}
		
		public EMonsterStat invulnerableToStatChange {
			get {
				return (EMonsterStat) statChangeBinaryVal;
			}
		}
		
		public float decisiveBlowsChangeMultiplier {
			get {
				return multiplierVal;
			}
		}
	}
}

