// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using Items;

[System.Serializable]
public class SelectedMoveData
{
	private EMoveUnlockType _unlockType;
	public MoveTreeCompletionDataRow _moveSelected;
	private MoveLibItem _forcedMove;
	public int forcedMoveUnlockLevel;
	public ITMItem item;
	public SelectedMoveData ()
	{
	}
	
	public SelectedMoveData (ITMItem aItemToUse)
	{
		item = aItemToUse;
	//	_moveSelected = new MoveTreeCompletionDataRow(item);
	}
	public MoveLibItem forcedMove {
		get {
			if(_forcedMove==null||_forcedMove.id==0||_forcedMove.Name==null) {
				return null;
			}
			return _forcedMove;
		}
	}
	public bool hasMoveData {
		get {
			if(_forcedMove==null&&_moveSelected==null) {
				return false;
			}
			return true;
		}
	}
	public MoveLibItem moveData {
		get {
			if(_forcedMove!=null&&_forcedMove.id>0) {
				return _forcedMove;
			}
			if(_moveSelected==null||_moveSelected.moveData==null) {
				return null;
			}
			return _moveSelected.moveData;
		}
	}
	public bool validMove {
		get {
			return (_moveSelected!=null&&_moveSelected.moveData!=null)||(_forcedMove!=null);
		}
	}
	
	

	public override string ToString() {
		int unlockVal = (int) _unlockType;
		if((_moveSelected!=null)&&(_moveSelected.moveData!=null))
			return unlockVal+","+_moveSelected.moveData.id.ToString(); else {
				return unlockVal+",";
			}
	}
	//TODO Reenable when multiplayer
	/*
	public SFSObject asSFSObject {
		get {
			SFSObject r = new SFSObject();
			if(_moveSelected!=null) {
				r.PutInt("moveID",_moveSelected.moveData.id);
				r.PutInt("unlockLevel",_moveSelected.currentUnlockLevel);
			}	
			return r;
		}
		set {
			_forcedMove = MovesLib.REF.getMove(value.GetInt("moveID"));
			forcedMoveUnlockLevel = value.GetInt("unlockLevel");
		}
	}
	*/
	public void setMove(EMoveUnlockType aUnlockType,MoveTreeCompletionDataRow aMove) {
		_unlockType = aUnlockType;
		if(aMove==null) {
			Debug.Log ("setMove, aMove is null");
		}
		_moveSelected = aMove;
	}
	public MoveTreeCompletionDataRow move {
		get {
			return _moveSelected;
		}
	}
}

