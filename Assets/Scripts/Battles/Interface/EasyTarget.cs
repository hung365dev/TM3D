// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;


namespace Battles
{
	public class EasyTarget : MonoBehaviour
	{
		public UITexture[] textures;
		public UIButton[] buttons;
		public BetterList<BattleMonster> myMonsters;
		public BattleTeam owningTeam;
		public delegate void OnTargetSelect(BattleMonster aMonster,BattleTeam aTeam);
		public event OnTargetSelect onClicked;
		
		public EasyTarget ()
		{
		
		
		}
		public void OnDisable() {
			for(int i = 0;i<textures.Length;i++) {
				TweenAlpha.Begin(textures[i].gameObject.transform.parent.gameObject,0.25f,0.05f);
			}
		}
		public void onTopClicked() {
			if(onClicked!=null) {
				onClicked(myMonsters[BattleConstants.TOP_INDEX],owningTeam);
			}
		}
		public void onMiddleClicked() {
			if(onClicked!=null) {
				onClicked(myMonsters[BattleConstants.FRONT_INDEX],owningTeam);
			}
		}
		public void onBottomClicked() {
			if(onClicked!=null) {
				onClicked(myMonsters[BattleConstants.BOTTOM_INDEX],owningTeam);
			}
		}
		public void initTargets(BetterList<BattleMonster> aMonster,BattleTeam aOwningTeam) {
			for(int i = 0;i<textures.Length;i++) {
				textures[i].gameObject.SetActive(false);
			}
			for(int i = 0;i<buttons.Length;i++) {
				buttons[i].gameObject.SetActive(false);
			}
			myMonsters = aMonster;
			owningTeam = aOwningTeam;
			int index = 0;
			for(int i = 0;i<aMonster.size;i++) {
				if(aMonster[i]!=null) {
					switch(aMonster[i].myPosition) {
						case(EMonsterPos.Top): 
							index = BattleConstants.TOP_INDEX;
						break;
						case(EMonsterPos.Front):
							index = BattleConstants.FRONT_INDEX;
						break;
						case(EMonsterPos.Bottom):
							index = BattleConstants.BOTTOM_INDEX;
						break;
					}
					buttons[index].gameObject.SetActive(true);
					textures[index].enabled = true;
					textures[index].mainTexture = (Texture) Resources.Load("FlatMonsters/"+aMonster[i].monster.monsterBreedRef.Name.ToLower().Replace(" ",""));
					if(textures[index].mainTexture!=null) {
						textures[index].width = textures[index].mainTexture.width;
						textures[index].height = 100;//t.mainTexture.height;
						textures[index].aspectRatio = textures[index].mainTexture.width/textures[index].mainTexture.height;
						textures[index].keepAspectRatio = UIWidget.AspectRatioSource.BasedOnHeight;
						textures[index].aspectRatio = (float) textures[index].mainTexture.width/(float) textures[index].mainTexture.height;
						textures[index].height = 90;//t.mainTexture.height;
						textures[index].gameObject.SetActive(true);
					}
					if(aMonster[i].monster.restingStatus!=ERestingStatus.Awake) {
						buttons[index].enabled = false;
					//	textures[index].GetComponent<BoxCollider2D>().enabled = false;
						TweenAlpha.Begin(textures[index].gameObject.transform.parent.gameObject,0.25f,0.1f);
						
					} else {
						
						buttons[index].enabled = true;
						//	textures[index].GetComponent<BoxCollider2D>().enabled = true;
						TweenAlpha.Begin(textures[index].gameObject.transform.parent.gameObject,0.25f,1f);
					}
					
				}
				else {
					
					buttons[index].enabled = false;
					//	textures[index].GetComponent<BoxCollider2D>().enabled = true;
					TweenAlpha.Begin(textures[index].gameObject.transform.parent.gameObject,0.25f,0.1f);
				}
			}

			
		}
	}
}

