// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
[System.Serializable]
public class MoveTreeCompletionDataRow
{
		public MoveTreeItem _moveTreeItemRef;
		private byte _currentUnlockedLevel;
		private MoveTreeCompletionDataRow _preceedingMove = null;
		private const byte MAXUNLOCKLEVELS = 5;
		public MoveTreeCompletionDataRow (MoveTreeItem aMoveTreeItem)
		{
			_moveTreeItemRef = aMoveTreeItem;
			_currentUnlockedLevel = 0;
			if(moveData==null) {
				Debug.Log ("Error with move: "+aMoveTreeItem.ID);
			}

		}
		public MoveLibItem moveData {
			get {
				return _moveTreeItemRef.moveData;
			}
		}
		public byte pointsToUnlock {
			get {
				return _moveTreeItemRef.LevelToUnlock;
			}
		}
		public EMoveBranch moveBranch {
			get {
				return _moveTreeItemRef.moveBranch;
			}
		}
		public void setPreceedingMove(BetterList<MoveTreeCompletionDataRow> aAllMoves) {
			_preceedingMove = null;
			for(int i = 0 ; i < aAllMoves.size ; i++) {
				if(_moveTreeItemRef!=null&&_moveTreeItemRef.PreceedingMove!=null&&aAllMoves[i]!=null&&aAllMoves[i].itemRef.ID == _moveTreeItemRef.PreceedingMove.ID) {
					_preceedingMove = aAllMoves[i];
				}
			}
		}
		
		public bool canBeSelected {
			get {
				return _currentUnlockedLevel > 0;
			}
		}
		public byte currentUnlockLevel {
			get {
				return _currentUnlockedLevel;
			}
			set {
				_currentUnlockedLevel = value;
			}
		}
		public EMoveTreeUnlockFailureReason canUnlock(int aEvolutionLevel,int aLevel,int aMaxEvolution) {
			bool preceedingMoveUnlocked = false;
			if(_preceedingMove!=null) {
				if(_preceedingMove._currentUnlockedLevel > 0) {
					preceedingMoveUnlocked = true;
				}
			} else {
				preceedingMoveUnlocked = true;
			}
			if(preceedingMoveUnlocked) {
				if( aLevel >= _moveTreeItemRef.LevelToUnlock) {
					if( aEvolutionLevel >= _moveTreeItemRef.RequiresEvolutionLevel || aMaxEvolution<=_moveTreeItemRef.RequiresEvolutionLevel) {
					if(this._currentUnlockedLevel < MAXUNLOCKLEVELS) {
						return EMoveTreeUnlockFailureReason.Success;
						} else 
						return EMoveTreeUnlockFailureReason.FullyUnlockedFailure;
					} else return EMoveTreeUnlockFailureReason.EvolutionFailure;
				} else return EMoveTreeUnlockFailureReason.LevelFailure;
			} else return EMoveTreeUnlockFailureReason.PreceedingMoveFailure;


		}
		public MoveTreeItem itemRef {
			get {
				return _moveTreeItemRef;
			}
		}

}

